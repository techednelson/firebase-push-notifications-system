{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from \"next/app\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return __jsx(React.Fragment, null, __jsx(Component, pageProps));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n\n\nMyApp.getInitialProps = async appContext => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(appContext);\n  return _objectSpread({}, appProps);\n};\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/nsandova/PycharmProjects/firebase-push-notifications-system/pages/_app.tsx"],"names":["App","MyApp","Component","pageProps","getInitialProps","appContext","appProps"],"mappings":";;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;;AAGA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAmD;AACjD,SACE,4BACE,MAAC,SAAD,EAAeA,SAAf,CADF,CADF;AAKD,C,CAED;AACA;AACA;AACA;AACA;;;AACAF,KAAK,CAACG,eAAN,GAAwB,MAAOC,UAAP,IAAkC;AACxD;AACA,QAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACI,eAAJ,CAAoBC,UAApB,CAAvB;AAEA,2BAAYC,QAAZ;AACD,CALD;;AAOA,eAAeL,KAAf","sourcesContent":["import App from \"next/app\";\r\nimport type { AppProps, AppContext } from 'next/app';\r\n\r\nfunction MyApp({ Component, pageProps }: AppProps) {\r\n  return (\r\n    <>\r\n      <Component {...pageProps} />\r\n    </>\r\n  );\r\n}\r\n\r\n// Only uncomment this method if you have blocking data requirements for\r\n// every single page in your application. This disables the ability to\r\n// perform automatic static optimization, causing every page in your app to\r\n// be server-side rendered.\r\n//\r\nMyApp.getInitialProps = async (appContext: AppContext) => {\r\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n  const appProps = await App.getInitialProps(appContext);\r\n\r\n  return { ...appProps }\r\n}\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}